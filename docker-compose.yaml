version: '3'

services:
  redis:
    image: redis
    command: redis-server

    ports:
      - '6379:6379'
    networks:
      - backend_network

  db:
    image: postgres
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
     test: [ "CMD-SHELL", "pg_isready -U postgres" ]
     interval: 10s
     timeout: 5s
     retries: 5
    networks:
      - backend_network


  app:
    env_file:
      - .env
    build: .
    tty: true
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_network

  celery:
   env_file:
      - .env
   build: .
   tty: true
   command: celery -A config worker -l INFO

   depends_on:
     - redis
     - app
   networks:
     - backend_network



  celery_beat:
    env_file:
      - .env
    build: .
    tty: true
    command: celery -A config beat -l INFO

    depends_on:
      - redis
      - app
    networks:
      - backend_network


  telegram_bot:
    env_file:
      - .env
    build: .
    tty: true
    command: python telegram_bot.py
    depends_on:
      - app

networks:

  backend_network:
    driver: bridge

volumes:
  pg_data:

